#!/usr/bin/env python3
"""
V√©rification des services frontend et backend
"""

import requests
import time
import os

def check_frontend():
    """V√©rifie le frontend React"""
    try:
        response = requests.get("http://localhost:3000", timeout=10)
        if response.status_code == 200:
            print("‚úÖ Frontend React d√©marr√© sur http://localhost:3000")
            return True
        else:
            print(f"‚ùå Frontend erreur: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Frontend non accessible: {e}")
        return False

def check_backend():
    """V√©rifie le backend FastAPI"""
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Backend FastAPI d√©marr√© sur http://localhost:8000")
            return True
        else:
            print(f"‚ùå Backend erreur: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Backend non accessible: {e}")
        return False

def check_robot_image():
    """V√©rifie que l'image du robot existe"""
    image_path = "iactualities-comparator/public/images/Human-robot-line.png"
    if os.path.exists(image_path):
        size = os.path.getsize(image_path)
        print(f"‚úÖ Image robot trouv√©e: {size} bytes")
        return True
    else:
        print(f"‚ùå Image robot manquante")
        return False

if __name__ == "__main__":
    print("üîç V√©rification des services...")
    print("=" * 50)
    
    # Attendre un peu que les services d√©marrent
    print("‚è≥ Attente du d√©marrage des services...")
    time.sleep(5)
    
    # V√©rifications
    frontend_ok = check_frontend()
    backend_ok = check_backend()
    image_ok = check_robot_image()
    
    print("\n" + "=" * 50)
    if frontend_ok and backend_ok and image_ok:
        print("üéâ Tous les services sont op√©rationnels !")
        print("\n‚ú® Am√©liorations de l'image Human-robot-line.png actives :")
        print("   ‚Ä¢ Contraste +25% pour des traits plus visibles")
        print("   ‚Ä¢ Luminosit√© +10% pour plus de clart√©")
        print("   ‚Ä¢ Saturation +15% pour des couleurs plus vives")
        print("   ‚Ä¢ Rendu net optimis√© (crisp-edges + pixelated)")
        print("   ‚Ä¢ Taille augment√©e (1.05x)")
        print("   ‚Ä¢ Ombre port√©e pour plus de profondeur")
        print("   ‚Ä¢ Effet de survol interactif")
        
        print("\nüöÄ Acc√©dez √† http://localhost:3000")
        print("   L'image du robot devrait maintenant √™tre beaucoup plus nette !")
    else:
        print("‚ö†Ô∏è  Certains services ne r√©pondent pas")
        if not frontend_ok:
            print("   - Frontend: cd iactualities-comparator && npm start")
        if not backend_ok:
            print("   - Backend: uvicorn backend_main:app --reload")
        if not image_ok:
            print("   - V√©rifiez que l'image Human-robot-line.png existe") 